version: "3.8"

services:
  cadvisor:
    image: ghcr.io/wuqiang0720/cadvisor:latest
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      macvlan_net:
        ipv4_address: 192.168.1.9
  collectd:
    image: ghcr.io/wuqiang0720/collectd:customize
    container_name: collectd
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    networks:
      macvlan_net:
        ipv4_address: 192.168.1.12
    healthcheck:
      test: ["CMD", "pgrep", "collectd"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
  prometheus:
    image: ghcr.io/wuqiang0720/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      macvlan_net:
        ipv4_address: 192.168.1.10
    healthcheck:
      test: ["CMD", "pgrep", "prometheus"]
      interval: 30s
      timeout: 5s
      retries: 3
#  grafana:
#    image: ghcr.io/wuqiang0720/grafana:latest
#    container_name: grafana
#    restart: always
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#    volumes:
#      - grafana_data:/var/lib/grafana
#    networks:
#      macvlan_net:
#        ipv4_address: 192.168.1.11
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#      start_period: 10s
volumes:
  prometheus_data:
#  grafana_data:
networks:
  macvlan_net:
    external: true
